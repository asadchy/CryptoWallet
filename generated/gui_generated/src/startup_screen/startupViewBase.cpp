/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/startup_screen/startupViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

startupViewBase::startupViewBase()  :
    show_logoEndedCallback(this, &startupViewBase::show_logoEndedCallbackHandler)
{
    background.setXY(0, 0);
    background.setBitmap(Bitmap(BITMAP_STARTUP_BACKGROUND_ID));

    logo_png.setXY(203, 104);
    logo_png.setBitmap(Bitmap(BITMAP_LOGO_ID));
    logo_png.setAlpha(2);

    logo_text.setXY(122, 46);
    logo_text.setColor(touchgfx::Color::getColorFrom24BitRGB(113,142,168));
    logo_text.setLinespacing(0);
    logo_text.setTypedText(TypedText(T_LOGO_TEXT));
    logo_text.setAlpha(0);
    add(background);
    add(logo_png);
    add(logo_text);
}

//Called when the screen is done with transition/load
void startupViewBase::afterTransition()
{
    //show_logo
    //When screen is entered fade logo_png
    //Fade logo_png to alpha:255 with LinearIn easing in 3000 ms (180 Ticks)
    logo_png.clearFadeAnimationEndedAction();
    logo_png.startFadeAnimation(255, 180, EasingEquations::linearEaseIn);
    logo_png.setFadeAnimationEndedAction(show_logoEndedCallback);

    //show_logo_text
    //When screen is entered fade logo_text
    //Fade logo_text to alpha:255 with LinearIn easing in 3000 ms (180 Ticks)
    logo_text.clearFadeAnimationEndedAction();
    logo_text.startFadeAnimation(255, 180, EasingEquations::linearEaseIn);
}

void startupViewBase::show_logoEndedCallbackHandler(const touchgfx::FadeAnimator<touchgfx::Image>& comp)
{

}
