/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef TRANSACTION_VIEW_BASE_HPP
#define TRANSACTION_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/transaction_screen/transactionPresenter.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class transactionViewBase : public touchgfx::View<transactionPresenter>
{
public:
    transactionViewBase();
    virtual ~transactionViewBase() {}

protected:
    FrontendApplication& application() { 
        return *static_cast<FrontendApplication*>(Application::getInstance()); 
    }

    /*
     * Member Declarations
     */
    touchgfx::Image background;
    touchgfx::TextAreaWithOneWildcard currency;
    touchgfx::TextAreaWithOneWildcard address;
    touchgfx::TextAreaWithOneWildcard value;
    touchgfx::ButtonWithLabel confirm;
    touchgfx::ButtonWithLabel cancel;
    touchgfx::TextArea transaction;

    /*
     * Wildcard Buffers
     */
    static const uint16_t CURRENCY_SIZE = 40;
    touchgfx::Unicode::UnicodeChar currencyBuffer[CURRENCY_SIZE];
    static const uint16_t ADDRESS_SIZE = 42;
    touchgfx::Unicode::UnicodeChar addressBuffer[ADDRESS_SIZE];
    static const uint16_t VALUE_SIZE = 40;
    touchgfx::Unicode::UnicodeChar valueBuffer[VALUE_SIZE];

private:

};

#endif // TRANSACTION_VIEW_BASE_HPP
